name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install client dependencies
        run: cd client && npm ci

      - name: Generate Prisma client
        run: npm run db:generate

      - name: Check TypeScript types (server)
        run: npx tsc --noEmit

      - name: Check TypeScript types (client)
        run: cd client && npm run type-check

      - name: Run ESLint (server)
        run: npm run lint

      - name: Run ESLint (client)
        run: npm run lint:client

      - name: Check Prettier formatting (server)
        run: npm run format:check

      - name: Check Prettier formatting (client)
        run: cd client && npm run format:check

      - name: Build client
        run: npm run build:client

      - name: Build server
        run: npm run build:server

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t jellyfin-analytics:test .

      - name: Test Docker image
        run: |
          docker run -d --name test-container \
            -e NODE_ENV=production \
            -e DATABASE_URL="file:/app/data/test.db" \
            -p 3000:3000 \
            jellyfin-analytics:test

          # Wait for container to start
          sleep 10

          # Test health endpoint
          curl -f http://localhost:3000/health || exit 1

          # Cleanup
          docker stop test-container
          docker rm test-container

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level moderate

      - name: Install client dependencies
        run: cd client && npm ci

      - name: Run client npm audit
        run: cd client && npm audit --audit-level moderate
